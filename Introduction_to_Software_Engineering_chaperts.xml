<?xml version='1.0' encoding='UTF-8'?>
<pdfx xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="http://pdfx.cs.man.ac.uk/static/article-schema.xsd">
  <meta>
    <job>0addd6b7fcd1d24ad59b8776493efc997ef506aa1df071a51dd84498ff462d39</job>
    <base_name>y1q</base_name>
    <doi>http://dx.doi.org/10.4018/9781599045672.ch011</doi>
    <warning>Name identification was not possible. </warning>
  </meta>
  <article>
    <front class="DoCO:FrontMatter">
      <outsider class="DoCO:TextBox" type="header" id="1">solutions evolve via collaboration between self-organizing cross-functional teams. Subtopics</outsider>
      <region class="DoCO:FigureBox" id="Fx2">
        <image class="DoCO:Figure" src="y1q.page_001.image_01.png" thmb="y1q.page_001.image_01-thumb.png"/>
      </region>
      <title-group>
        <article-title class="DoCO:Title" id="6" confidence="possible">View model A  view  model  is  framework  which  provides  the  viewpoints  on  the  system and its environment, to be used in the software development process. It is a graphical representation of the underlying semantics of a view. The  purpose  of  viewpoints  and  views  is  to  enable  human  engineers  to comprehend  very  complex  systems,  and  to  organize  the  elements  of  the problem  and  the  solution  around  domains  of  expertise.  In  the  engineering of physically intensive systems, viewpoints often correspond to capabilities and responsibilities within the engineering organization.[8] Most complex system specifications are so extensive that no one individual can fully comprehend all aspects of the specifications. Furthermore, we all have  different  interests  in  a  given  system  and  different  reasons  for The TEAF Matrix of Views and examining  the  system's  specifications.  A  business  executive  will  ask Perspectives. different questions of a system make-up than would a system implementer. The  concept  of  viewpoints  framework,  therefore,  is  to  provide  separate viewpoints  into  the  specification  of  a  given  complex  system.  These viewpoints  each  satisfy  an  audience  with  interest  in  some  set  of  aspects  of  the  system.  Associated  with  each viewpoint  is  a  viewpoint  language  that  optimizes  the  vocabulary  and  presentation  for  the  audience  of  that viewpoint. Business process and data modelling Graphical  representation  of  the  current  state  of  information  provides  a  very  effective  means  for  presenting information to both users and system developers. A business model illustrates the functions associated with the business process being modeled and the organizations that perform these functions. By depicting activities and information flows, a foundation is created to visualize, define, understand, and validate the nature of a process. A data model provides the details of information to be stored, and is of primary use when the final product is the generation of computer software code for an application or the preparation of a functional specification to aid a computer software make-or-buy decision. See the figure on the right for an example of the interaction between business example of the interaction process and data models.[9] between business process and data models.[9] Usually,  a  model  is  created  after  conducting  an  interview,  referred  to  as business  analysis.  The  interview  consists  of  a  facilitator  asking  a  series  of questions designed to extract required information that describes a process. The  interviewer  is  called  a  facilitator  to  emphasize  that  it  is  the  participants  who  provide  the  information.  The facilitator  should  have  some  knowledge  of  the  process  of  interest,  but  this  is  not  as  important  as  having  a structured  methodology  by  which  the  questions  are  asked  of  the  process  expert.  The  methodology  is  important because usually a team of facilitators is collecting information across the facility and the results of the information from all the interviewers must fit together once completed.[9] The  models  are  developed  as  defining  either  the  current  state  of  the  process,  in  which  case  the  final  product  is called the "as-is" snapshot model, or a collection of ideas of what the process should contain, resulting in a "what- can-be"  model.  Generation  of  process  and  data  models  can  be  used  to  determine  if  the  existing  processes  and information systems are sound and only need minor modifications or enhancements, or if re-engineering is required as a corrective action. The creation of business models is more than a way to view or automate your information process.  Analysis  can  be  used  to  fundamentally  reshape  the  way  your  business  or  organization  conducts  its operations.[9] Computer-aided software engineering Computer-aided software engineering (CASE), in the field software engineering is the scientific application of a set of  tools  and  methods  to  a  software  which  results  in  high-quality,  defect-free,  and  maintainable  software products.[10] It also refers to methods for the development of information systems together with automated tools that  can  be  used  in  the  software  development  process.[11]  The  term  "computer-aided  software  engineering" (CASE)  can  refer  to  the  software  used  for  the  automated  development  of  systems  software,  i.e.,  computer  code. The  CASE  functions  include  analysis,  design,  and  programming.  CASE  tools  automate  methods  for  designing, documenting, and producing structured computer code in the desired programming language.[12] Two key ideas of Computer-aided Software System Engineering (CASE) are:[13] Foster computer assistance in software development and or software maintenance processes, and</article-title>
      </title-group>
    </front>
    <body class="DoCO:BodyMatter">
      <region class="DoCO:TextChunk" id="5" page="1" column="1">A  view  model  is  framework  which  provides  the  viewpoints  on  the  system and its environment, to be used in the software development process. It is a graphical representation of the underlying semantics of a view. The  purpose  of  viewpoints  and  views  is  to  enable  human  engineers  to comprehend  very  complex  systems,  and  to  organize  the  elements  of  the problem  and  the  solution  around  domains  of  expertise.  In  the  engineering of physically intensive systems, viewpoints often correspond to capabilities and responsibilities within the engineering organization.[8] Most complex system specifications are so extensive that no one individual have  can fully comprehend all aspects of the specifications. Furthermore, we all different  interests  in  a  given  system  and  different  reasons  for The TEAF Matrix of Views and examining  the  system's  specifications.  A  business  executive  will  ask Perspectives. different questions of a system make-up than would a system implementer. The  concept  of  viewpoints  framework,  therefore,  is  to  provide  separate viewpoints  into  the  specification  of  a  given  complex  system.  These viewpoints  each  satisfy  an  audience  with  interest  in  some  set  of  aspects  of  the  system.  Associated  with  each viewpoint  is  a  viewpoint  language  that  optimizes  the  vocabulary  and  presentation  for  the  audience  of  that viewpoint. <marker type="block"/> Graphical  representation  of  the  current  state  of  information  provides  a  very  effective  means  for  presenting information to both users and system developers. A business model illustrates the functions associated with the business process being modeled and the organizations that perform these functions. By depicting activities and information flows, a foundation is created to visualize, define, understand, and validate the nature of a process. A data model provides the details of information to be stored, and is of primary use when the final product is the generation of computer software code for an application or the preparation of a functional specification to aid a computer software make-or-buy decision. See the figure on the right for an example of the interaction between business example of the interaction process and data models.[9] models.[9] between business process and data Usually,  a  model  is  created  after  conducting  an  interview,  referred  to  as business  analysis.  The  interview  consists  of  a  facilitator  asking  a  series  of questions designed to extract required information that describes a process. The  interviewer  is  called  a  facilitator  to  emphasize  that  it  is  the  participants  who  provide  the  information.  The facilitator  should  have  some  knowledge  of  the  process  of  interest,  but  this  is  not  as  important  as  having  a structured  methodology  by  which  the  questions  are  asked  of  the  process  expert.  The  methodology  is  important because usually a team of facilitators is collecting information across the facility and the results of the information from all the interviewers must fit together once completed.[9] The  models  are  developed  as  defining  either  the  current  state  of  the  process,  in  which  case  the  final  product  is called the "as-is" snapshot model, or a collection of ideas of what the process should contain, resulting in a "what- can-be"  model.  Generation  of  process  and  data  models  can  be  used  to  determine  if  the  existing  processes  and information systems are sound and only need minor modifications or enhancements, or if re-engineering is required as a corrective action. The creation of business models is more than a way to view or automate your information process.  Analysis  can  be  used  to  fundamentally  reshape  the  way  your  business  or  organization  conducts  its operations.[9]</region>
      <region class="DoCO:FigureBox" id="Fx4">
        <image class="DoCO:Figure" src="y1q.page_001.image_02.png" thmb="y1q.page_001.image_02-thumb.png"/>
      </region>
      <region class="DoCO:TextChunk" id="7" page="1" column="1">Computer-aided software engineering (CASE), in the field software engineering is the scientific application of a set of  tools  and  methods  to  a  software  which  results  in  high-quality,  defect-free,  and  maintainable  software products.[10] It also refers to methods for the development of information systems together with automated tools that  can  be  used  in  the  software  development  process.[11]  The  term  "computer-aided  software  engineering" (CASE)  can  refer  to  the  software  used  for  the  automated  development  of  systems  software,  i.e.,  computer  code. The  CASE  functions  include  analysis,  design,  and  programming.  CASE  tools  automate  methods  for  designing, documenting, and producing structured computer code in the desired programming language.[12] Two key ideas of Computer-aided Software System Engineering (CASE) are:[13] Foster computer assistance in software development and or software maintenance processes, and</region>
    </body>
  </article>
</pdfx>
